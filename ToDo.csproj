<Project Sdk="Microsoft.NET.Sdk">

	<PropertyGroup>
		<TargetFrameworks>net7.0-android;net7.0-ios;net7.0-maccatalyst</TargetFrameworks>
		<TargetFrameworks Condition="$([MSBuild]::IsOSPlatform('windows'))">$(TargetFrameworks);net7.0-windows10.0.19041.0</TargetFrameworks>
		<!-- Uncomment to also build the tizen app. You will need to install tizen by following this: https://github.com/Samsung/Tizen.NET -->
		<!-- <TargetFrameworks>$(TargetFrameworks);net7.0-tizen</TargetFrameworks> -->
		<OutputType>Exe</OutputType>
		<RootNamespace>Todo</RootNamespace>
		<UseMaui>true</UseMaui>
		<SingleProject>true</SingleProject>
		<ImplicitUsings>enable</ImplicitUsings>
		<EmbedAssembliesIntoApk>true</EmbedAssembliesIntoApk>

		<!-- Display name -->
		<ApplicationTitle>Todo</ApplicationTitle>

		<!-- App Identifier -->
		<ApplicationId>com.companyname.todo</ApplicationId>
		<ApplicationIdGuid>15515e98-0fef-480c-9f3e-b50944468928</ApplicationIdGuid>

		<!-- Versions -->
		<ApplicationDisplayVersion>1.0</ApplicationDisplayVersion>
		<ApplicationVersion>1</ApplicationVersion>

		<SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'ios'">11.0</SupportedOSPlatformVersion>
		<SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'maccatalyst'">13.1</SupportedOSPlatformVersion>
		<SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'android'">21.0</SupportedOSPlatformVersion>
		<SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'windows'">10.0.17763.0</SupportedOSPlatformVersion>
		<TargetPlatformMinVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'windows'">10.0.17763.0</TargetPlatformMinVersion>
		<SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'tizen'">6.5</SupportedOSPlatformVersion>
	</PropertyGroup>

	<ItemGroup>
		<!-- App Icon -->
		<MauiIcon Include="Resources\AppIcon\appicon.svg" Color="#ffffff" />

		<!-- Splash Screen -->
		<MauiSplashScreen Include="Resources\Splash\splash.svg" Color="#000000" Resize="false" />

		<!-- Images -->
		<MauiImage Include="Resources\Images\*" />
		<MauiImage Update="Resources\Images\dotnet_bot.svg" BaseSize="168,208" />

		<!-- Custom Fonts -->
		<MauiFont Include="Resources\Fonts\*" />

		<!-- Raw Assets (also remove the "Resources\Raw" prefix) -->
		<MauiAsset Include="Resources\Raw\**" LogicalName="%(RecursiveDir)%(Filename)%(Extension)" />
	</ItemGroup>

	<ItemGroup>
		<PackageReference Include="CommunityToolkit.Maui" Version="4.0.0" />
		<PackageReference Include="CommunityToolkit.Mvvm" Version="8.0.0" />
		<PackageReference Include="Microsoft.EntityFrameworkCore" Version="7.0.2" />
		<PackageReference Include="Microsoft.EntityFrameworkCore.Sqlite" Version="7.0.2" />
		<PackageReference Include="Microsoft.EntityFrameworkCore.Tools" Version="7.0.2">
		  <PrivateAssets>all</PrivateAssets>
		  <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
		</PackageReference>
		<PackageReference Include="Microsoft.Extensions.Logging.Debug" Version="7.0.0" />
		<PackageReference Include="Mopups" Version="1.1.0" />
		<PackageReference Include="SkiaSharp.Extended.UI.Maui" Version="2.0.0-preview.61" />
		<PackageReference Include="Syncfusion.Maui.Core" Version="20.4.42" />
	</ItemGroup>

	<ItemGroup>
	  <MauiXaml Update="History.xaml">
	    <Generator>MSBuild:Compile</Generator>
	  </MauiXaml>
	  <MauiXaml Update="PopupPage.xaml">
	    <Generator>MSBuild:Compile</Generator>
	  </MauiXaml>
	</ItemGroup>

	<Target Name="RemoveCollidingDepsJson" AfterTargets="GetPackagingOutputs" BeforeTargets="_ComputeAppxPackagePayload">
		<!-- If conflicting build and publish deps.json files are present, use only the publish deps.json, 
            and remove the corresponding build deps.json. -->
		<ItemGroup Condition="'@(PackagingOutputs)'!=''">
			<_PublishDepsJson Include="@(PackagingOutputs-&gt;WithMetadataValue('OutputGroup', 'PublishItemsOutputGroupOutput'))" Condition="$([System.String]::Copy('%(FileName)%(Extension)').EndsWith('.deps.json'))" />
			<_BuildDepsJson Include="@(PackagingOutputs-&gt;WithMetadataValue('OutputGroup', 'GetCopyToOutputDirectoryItemsOutputGroup'))" Condition="$([System.String]::Copy('%(FileName)%(Extension)').EndsWith('.deps.json'))" />
			<PackagingOutputs Condition="'@(_PublishDepsJson)'!='' and '@(_BuildDepsJson)'!=''" Remove="@(_BuildDepsJson)" />
		</ItemGroup>
	</Target>

	<ProjectExtensions><VisualStudio><UserProperties XamarinHotReloadDebuggerTimeoutExceptionTodoHideInfoBar="True" /></VisualStudio></ProjectExtensions>

</Project>
